



创建一个gh-pages的分支
        git checkout -b gh-pages
将代码commit这个分支上

链接远程仓库和本地仓库
    git remote add origin 地址

将代码推送到远程仓库
    git push origin 地址


   搭建静态页面在gitHub上的gh-pages分支上
     打开自己页面 -- git init -- git checkout -b gh-pages
     git add .  ---> git commit -m"描述"  --->
     git remote add origin  +  仓库地址  --->git push origin gh-pages
   1.创建分支
       git checkout -b gh-pages
   2.将代码commit 分支上
       git add .
       git add .
   3.链接远程仓库到本地仓库
       git remote add origin  +  仓库地址
   4.将代码推送到远程仓库上
       git push origin gh-pages
       -------------------------------------------------------
       git config --global user.name  xxxx
       git config --global user.email xxx

       git
       -----------------------
       git init
       git add.  /-A
       git commit -m
       ----------------------------
       查看历史区的版本

       git log
       git reset --hard   版本id
       git reflog
       ---------------------------------
       本次add退回上一次的状态/
       git reset HEAD 文件
       -------------------------------------
       用暂存区或者版本库覆盖掉工作区
       git checkout 文件名
       ---------------------------------------
       比较
       -工作区和暂存区\
       git diff
       -暂存区和历史区
       git diff --cached
       -工作区和历史区
       git diff master

       ---------------------
       创建分支
       git branch dev
       切换到分支
       git checkout dev
       创建并切换
       git checkout -b dev
       删除分支
       git branch -d dev


       在dev提交了代码.需要切换到主干上,在主干上并和
       git merge dev
       git branch -d dev
       -----------------------
       提交gitHub静态页
       -创建一个gh-pages
       -将代码提交到gh-pages上
       -和远程仓库建立关系
         git remote add  别名 地址
       -推送到远程仓库上
         git push 别名 gh-pages







